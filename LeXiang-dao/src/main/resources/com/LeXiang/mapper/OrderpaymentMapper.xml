<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.LeXiang.mapper.OrderpaymentMapper" >
  <resultMap id="BaseResultMap" type="com.LeXiang.pojo.Orderpayment" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="createdDate" property="createddate" jdbcType="TIMESTAMP" />
    <result column="lastModifiedDate" property="lastmodifieddate" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="BIGINT" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="bank" property="bank" jdbcType="VARCHAR" />
    <result column="fee" property="fee" jdbcType="DECIMAL" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="method" property="method" jdbcType="INTEGER" />
    <result column="payer" property="payer" jdbcType="VARCHAR" />
    <result column="paymentMethod" property="paymentmethod" jdbcType="VARCHAR" />
    <result column="sn" property="sn" jdbcType="VARCHAR" />
    <result column="orders" property="orders" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, createdDate, lastModifiedDate, version, account, amount, bank, fee, memo, method, 
    payer, paymentMethod, sn, orders
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.LeXiang.pojo.OrderpaymentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orderpayment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from orderpayment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from orderpayment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.LeXiang.pojo.OrderpaymentExample" >
    delete from orderpayment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.LeXiang.pojo.Orderpayment" >
    insert into orderpayment (id, createdDate, lastModifiedDate, 
      version, account, amount, 
      bank, fee, memo, method, 
      payer, paymentMethod, sn, 
      orders)
    values (#{id,jdbcType=BIGINT}, #{createddate,jdbcType=TIMESTAMP}, #{lastmodifieddate,jdbcType=TIMESTAMP}, 
      #{version,jdbcType=BIGINT}, #{account,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, 
      #{bank,jdbcType=VARCHAR}, #{fee,jdbcType=DECIMAL}, #{memo,jdbcType=VARCHAR}, #{method,jdbcType=INTEGER}, 
      #{payer,jdbcType=VARCHAR}, #{paymentmethod,jdbcType=VARCHAR}, #{sn,jdbcType=VARCHAR}, 
      #{orders,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.LeXiang.pojo.Orderpayment" >
    insert into orderpayment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createddate != null" >
        createdDate,
      </if>
      <if test="lastmodifieddate != null" >
        lastModifiedDate,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="bank != null" >
        bank,
      </if>
      <if test="fee != null" >
        fee,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="method != null" >
        method,
      </if>
      <if test="payer != null" >
        payer,
      </if>
      <if test="paymentmethod != null" >
        paymentMethod,
      </if>
      <if test="sn != null" >
        sn,
      </if>
      <if test="orders != null" >
        orders,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createddate != null" >
        #{createddate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastmodifieddate != null" >
        #{lastmodifieddate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        #{version,jdbcType=BIGINT},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="bank != null" >
        #{bank,jdbcType=VARCHAR},
      </if>
      <if test="fee != null" >
        #{fee,jdbcType=DECIMAL},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        #{method,jdbcType=INTEGER},
      </if>
      <if test="payer != null" >
        #{payer,jdbcType=VARCHAR},
      </if>
      <if test="paymentmethod != null" >
        #{paymentmethod,jdbcType=VARCHAR},
      </if>
      <if test="sn != null" >
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="orders != null" >
        #{orders,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.LeXiang.pojo.OrderpaymentExample" resultType="java.lang.Integer" >
    select count(*) from orderpayment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update orderpayment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createddate != null" >
        createdDate = #{record.createddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastmodifieddate != null" >
        lastModifiedDate = #{record.lastmodifieddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=BIGINT},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.bank != null" >
        bank = #{record.bank,jdbcType=VARCHAR},
      </if>
      <if test="record.fee != null" >
        fee = #{record.fee,jdbcType=DECIMAL},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null" >
        method = #{record.method,jdbcType=INTEGER},
      </if>
      <if test="record.payer != null" >
        payer = #{record.payer,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentmethod != null" >
        paymentMethod = #{record.paymentmethod,jdbcType=VARCHAR},
      </if>
      <if test="record.sn != null" >
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.orders != null" >
        orders = #{record.orders,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orderpayment
    set id = #{record.id,jdbcType=BIGINT},
      createdDate = #{record.createddate,jdbcType=TIMESTAMP},
      lastModifiedDate = #{record.lastmodifieddate,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      bank = #{record.bank,jdbcType=VARCHAR},
      fee = #{record.fee,jdbcType=DECIMAL},
      memo = #{record.memo,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=INTEGER},
      payer = #{record.payer,jdbcType=VARCHAR},
      paymentMethod = #{record.paymentmethod,jdbcType=VARCHAR},
      sn = #{record.sn,jdbcType=VARCHAR},
      orders = #{record.orders,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.LeXiang.pojo.Orderpayment" >
    update orderpayment
    <set >
      <if test="createddate != null" >
        createdDate = #{createddate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastmodifieddate != null" >
        lastModifiedDate = #{lastmodifieddate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="bank != null" >
        bank = #{bank,jdbcType=VARCHAR},
      </if>
      <if test="fee != null" >
        fee = #{fee,jdbcType=DECIMAL},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        method = #{method,jdbcType=INTEGER},
      </if>
      <if test="payer != null" >
        payer = #{payer,jdbcType=VARCHAR},
      </if>
      <if test="paymentmethod != null" >
        paymentMethod = #{paymentmethod,jdbcType=VARCHAR},
      </if>
      <if test="sn != null" >
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="orders != null" >
        orders = #{orders,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.LeXiang.pojo.Orderpayment" >
    update orderpayment
    set createdDate = #{createddate,jdbcType=TIMESTAMP},
      lastModifiedDate = #{lastmodifieddate,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      bank = #{bank,jdbcType=VARCHAR},
      fee = #{fee,jdbcType=DECIMAL},
      memo = #{memo,jdbcType=VARCHAR},
      method = #{method,jdbcType=INTEGER},
      payer = #{payer,jdbcType=VARCHAR},
      paymentMethod = #{paymentmethod,jdbcType=VARCHAR},
      sn = #{sn,jdbcType=VARCHAR},
      orders = #{orders,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>